{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\react-16.8\\\\src\\\\cmpnts\\\\AnalyticsView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsView = () => {\n  _s();\n  useEffect(() => {\n    // Make monochrome colors\n    const colors = Highcharts.getOptions().colors.map((c, i) => Highcharts.color(Highcharts.getOptions().colors[0]).brighten((i - 3) / 7).get());\n\n    // Build the chart\n    Highcharts.chart('chartContainer', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: 'Open and Closed invoices',\n        align: 'center'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n        }\n      },\n      series: [{\n        name: 'Share',\n        data: []\n      }]\n    });\n  }, []);\n  const squareStyle = {\n    width: '30%',\n    height: '30%',\n    backgroundColor: 'red',\n    margin: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: squareStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: squareStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chartContainer\",\n      style: squareStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticsView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AnalyticsView;\nexport default AnalyticsView;\n\n// Data retrieved from https://netmarketshare.com\nHighcharts.chart('container', {\n  chart: {\n    plotBackgroundColor: null,\n    plotBorderWidth: null,\n    plotShadow: false,\n    type: 'pie'\n  },\n  title: {\n    text: 'Browser market shares in May, 2020',\n    align: 'left'\n  },\n  tooltip: {\n    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n  },\n  accessibility: {\n    point: {\n      valueSuffix: '%'\n    }\n  },\n  plotOptions: {\n    pie: {\n      allowPointSelect: true,\n      cursor: 'pointer',\n      dataLabels: {\n        enabled: true,\n        format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n      }\n    }\n  },\n  series: [{\n    name: 'Share',\n    colorByPoint: true,\n    data: []\n  }]\n});\nvar _c;\n$RefreshReg$(_c, \"AnalyticsView\");","map":{"version":3,"names":["React","useEffect","Highcharts","jsxDEV","_jsxDEV","AnalyticsView","_s","colors","getOptions","map","c","i","color","brighten","get","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","align","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","series","name","data","squareStyle","width","height","backgroundColor","margin","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","colorByPoint","$RefreshReg$"],"sources":["C:/Users/KIIT/Documents/react-16.8/src/cmpnts/AnalyticsView.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\n\r\nconst AnalyticsView = () => {\r\n  useEffect(() => {\r\n    // Make monochrome colors\r\n    const colors = Highcharts.getOptions().colors.map((c, i) =>\r\n      Highcharts.color(Highcharts.getOptions().colors[0])\r\n        .brighten((i - 3) / 7)\r\n        .get()\r\n    );\r\n\r\n    // Build the chart\r\n    Highcharts.chart('chartContainer', {\r\n      chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie',\r\n      },\r\n      title: {\r\n        text: 'Open and Closed invoices',\r\n        align: 'center',\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\r\n      },\r\n      accessibility: {\r\n        point: {\r\n          valueSuffix: '%',\r\n        },\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %'\r\n            }\r\n        }\r\n    },\r\n      series: [\r\n        {\r\n          name: 'Share',\r\n          data: [  ],\r\n        },\r\n      ],\r\n    });\r\n  }, []);\r\n\r\n  const squareStyle = {\r\n    width: '30%',\r\n    height: '30%',\r\n    backgroundColor: 'red',\r\n    margin: '10px',\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div style={squareStyle}></div>\r\n      <div style={squareStyle}></div>\r\n      <div id=\"chartContainer\" style={squareStyle}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsView;\r\n\r\n\r\n// Data retrieved from https://netmarketshare.com\r\nHighcharts.chart('container', {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Browser market shares in May, 2020',\r\n        align: 'left'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %'\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Share',\r\n        colorByPoint: true,\r\n        data: []\r\n    }]\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}