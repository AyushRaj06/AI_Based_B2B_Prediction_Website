{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\react-16.8\\\\src\\\\cmpnts\\\\PieChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Highcharts from 'highcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pie = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/your-backend-api-url');\n\n        // Extract the y data from the response and update the chart data\n        const data = response.data.map(item => ({\n          name: item.name,\n          y: item.y\n        }));\n        setChartData(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Make monochrome colors\n    const colors = Highcharts.getOptions().colors.map((i, c) => Highcharts.color('#8fd163').brighten((i - 3) / 3).get());\n\n    // Build the chart\n    Highcharts.chart('PieChart', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        backgroundColor: 'transparent',\n        type: 'pie'\n      },\n      title: {\n        text: 'Open and Closed invoices',\n        align: 'center',\n        style: {\n          color: 'white'\n        }\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          borderRadius: 5,\n          colors,\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\n            distance: -50,\n            filter: {\n              property: 'percentage',\n              operator: '>',\n              value: 4\n            }\n          }\n        }\n      },\n      series: [{\n        name: 'Share',\n        data: chartData\n      }]\n    });\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"PieChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n_s(Pie, \"mVhWrIOL/+h1my2Da5IBcaVB7wY=\");\n_c = Pie;\nexport default Pie;\nvar _c;\n$RefreshReg$(_c, \"Pie\");","map":{"version":3,"names":["React","useEffect","useState","axios","Highcharts","jsxDEV","_jsxDEV","Pie","_s","chartData","setChartData","fetchData","response","get","data","map","item","name","y","error","console","colors","getOptions","i","c","color","brighten","chart","plotBackgroundColor","plotBorderWidth","plotShadow","backgroundColor","type","title","text","align","style","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","borderRadius","dataLabels","enabled","format","distance","filter","property","operator","value","series","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Documents/react-16.8/src/cmpnts/PieChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Highcharts from 'highcharts';\r\n\r\nconst Pie = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/your-backend-api-url');\r\n\r\n        // Extract the y data from the response and update the chart data\r\n        const data = response.data.map((item) => ({\r\n          name: item.name,\r\n          y: item.y,\r\n        }));\r\n        setChartData(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Make monochrome colors\r\n    const colors = Highcharts.getOptions().colors.map((i, c) =>\r\n      Highcharts.color('#8fd163')\r\n        .brighten((i - 3) / 3)\r\n        .get()\r\n    );\r\n\r\n    // Build the chart\r\n    Highcharts.chart('PieChart', {\r\n      chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        backgroundColor: 'transparent',\r\n        type: 'pie',\r\n      },\r\n      title: {\r\n        text: 'Open and Closed invoices',\r\n        align: 'center',\r\n        style: { color: 'white' },\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\r\n      },\r\n      accessibility: {\r\n        point: {\r\n          valueSuffix: '%',\r\n        },\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          allowPointSelect: true,\r\n          cursor: 'pointer',\r\n          borderRadius: 5,\r\n          colors,\r\n          dataLabels: {\r\n            enabled: true,\r\n            format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\r\n            distance: -50,\r\n            filter: {\r\n              property: 'percentage',\r\n              operator: '>',\r\n              value: 4,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Share',\r\n          data: chartData,\r\n        },\r\n      ],\r\n    });\r\n  }, [chartData]);\r\n\r\n  return <div id=\"PieChart\"></div>;\r\n};\r\n\r\nexport default Pie;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,uBAAuB,CAAC;;QAEzD;QACA,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;UACxCC,IAAI,EAAED,IAAI,CAACC,IAAI;UACfC,CAAC,EAAEF,IAAI,CAACE;QACV,CAAC,CAAC,CAAC;QACHR,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,MAAM,GAAGjB,UAAU,CAACkB,UAAU,CAAC,CAAC,CAACD,MAAM,CAACN,GAAG,CAAC,CAACQ,CAAC,EAAEC,CAAC,KACrDpB,UAAU,CAACqB,KAAK,CAAC,SAAS,CAAC,CACxBC,QAAQ,CAAC,CAACH,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CACrBV,GAAG,CAAC,CACT,CAAC;;IAED;IACAT,UAAU,CAACuB,KAAK,CAAC,UAAU,EAAE;MAC3BA,KAAK,EAAE;QACLC,mBAAmB,EAAE,IAAI;QACzBC,eAAe,EAAE,IAAI;QACrBC,UAAU,EAAE,KAAK;QACjBC,eAAe,EAAE,aAAa;QAC9BC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE,0BAA0B;QAChCC,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE;UAAEX,KAAK,EAAE;QAAQ;MAC1B,CAAC;MACDY,OAAO,EAAE;QACPC,WAAW,EAAE;MACf,CAAC;MACDC,aAAa,EAAE;QACbC,KAAK,EAAE;UACLC,WAAW,EAAE;QACf;MACF,CAAC;MACDC,WAAW,EAAE;QACXC,GAAG,EAAE;UACHC,gBAAgB,EAAE,IAAI;UACtBC,MAAM,EAAE,SAAS;UACjBC,YAAY,EAAE,CAAC;UACfzB,MAAM;UACN0B,UAAU,EAAE;YACVC,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE,iDAAiD;YACzDC,QAAQ,EAAE,CAAC,EAAE;YACbC,MAAM,EAAE;cACNC,QAAQ,EAAE,YAAY;cACtBC,QAAQ,EAAE,GAAG;cACbC,KAAK,EAAE;YACT;UACF;QACF;MACF,CAAC;MACDC,MAAM,EAAE,CACN;QACEtC,IAAI,EAAE,OAAO;QACbH,IAAI,EAAEL;MACR,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBAAOH,OAAA;IAAKkD,EAAE,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClC,CAAC;AAACpD,EAAA,CAhFID,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAkFT,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}