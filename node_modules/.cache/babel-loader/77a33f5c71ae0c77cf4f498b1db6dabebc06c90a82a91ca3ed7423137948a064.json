{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\react-16.8\\\\src\\\\cmpnts\\\\PieChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Highcharts from 'highcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pie = () => {\n  _s();\n  const [openValue, setOpenValue] = useState(0);\n  const [closedValue, setClosedValue] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/your-backend-api-url');\n        const {\n          open,\n          closed\n        } = response.data;\n        setOpenValue(open);\n        setClosedValue(closed);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    Highcharts.chart('PieChart', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        backgroundColor: 'transparent',\n        type: 'pie'\n      },\n      title: {\n        text: 'Open and Closed invoices',\n        align: 'center',\n        style: {\n          color: 'white'\n        }\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          borderRadius: 5,\n          colors: ['#8fd163', '#d16363'],\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\n            distance: -50,\n            filter: {\n              property: 'percentage',\n              operator: '>',\n              value: 4\n            }\n          }\n        }\n      },\n      series: [{\n        name: 'Share',\n        data: [{\n          name: 'Open',\n          y: parseFloat(openValue)\n        }, {\n          name: 'Closed',\n          y: parseFloat(closedValue)\n        }]\n      }]\n    });\n  }, [openValue, closedValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"PieChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Pie, \"zIZ1MyKVsY8dvryoD4HOCcsnVWA=\");\n_c = Pie;\nexport default Pie;\nvar _c;\n$RefreshReg$(_c, \"Pie\");","map":{"version":3,"names":["React","useEffect","useState","axios","Highcharts","jsxDEV","_jsxDEV","Pie","_s","openValue","setOpenValue","closedValue","setClosedValue","fetchData","response","get","open","closed","data","error","console","chart","plotBackgroundColor","plotBorderWidth","plotShadow","backgroundColor","type","title","text","align","style","color","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","borderRadius","colors","dataLabels","enabled","format","distance","filter","property","operator","value","series","name","y","parseFloat","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Documents/react-16.8/src/cmpnts/PieChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Highcharts from 'highcharts';\r\n\r\nconst Pie = () => {\r\n  const [openValue, setOpenValue] = useState(0);\r\n  const [closedValue, setClosedValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/your-backend-api-url');\r\n\r\n        const { open, closed } = response.data;\r\n\r\n        setOpenValue(open);\r\n        setClosedValue(closed);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Highcharts.chart('PieChart', {\r\n      chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        backgroundColor: 'transparent',\r\n        type: 'pie',\r\n      },\r\n      title: {\r\n        text: 'Open and Closed invoices',\r\n        align: 'center',\r\n        style: { color: 'white' },\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\r\n      },\r\n      accessibility: {\r\n        point: {\r\n          valueSuffix: '%',\r\n        },\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          allowPointSelect: true,\r\n          cursor: 'pointer',\r\n          borderRadius: 5,\r\n          colors: ['#8fd163', '#d16363'],\r\n          dataLabels: {\r\n            enabled: true,\r\n            format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\r\n            distance: -50,\r\n            filter: {\r\n              property: 'percentage',\r\n              operator: '>',\r\n              value: 4,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Share',\r\n          data: [\r\n            { name: 'Open', y: parseFloat(openValue) },\r\n            { name: 'Closed', y: parseFloat(closedValue) },\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n  }, [openValue, closedValue]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"PieChart\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pie;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,uBAAuB,CAAC;QAEzD,MAAM;UAAEC,IAAI;UAAEC;QAAO,CAAC,GAAGH,QAAQ,CAACI,IAAI;QAEtCR,YAAY,CAACM,IAAI,CAAC;QAClBJ,cAAc,CAACK,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACdG,UAAU,CAACiB,KAAK,CAAC,UAAU,EAAE;MAC3BA,KAAK,EAAE;QACLC,mBAAmB,EAAE,IAAI;QACzBC,eAAe,EAAE,IAAI;QACrBC,UAAU,EAAE,KAAK;QACjBC,eAAe,EAAE,aAAa;QAC9BC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE,0BAA0B;QAChCC,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ;MAC1B,CAAC;MACDC,OAAO,EAAE;QACPC,WAAW,EAAE;MACf,CAAC;MACDC,aAAa,EAAE;QACbC,KAAK,EAAE;UACLC,WAAW,EAAE;QACf;MACF,CAAC;MACDC,WAAW,EAAE;QACXC,GAAG,EAAE;UACHC,gBAAgB,EAAE,IAAI;UACtBC,MAAM,EAAE,SAAS;UACjBC,YAAY,EAAE,CAAC;UACfC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC9BC,UAAU,EAAE;YACVC,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE,iDAAiD;YACzDC,QAAQ,EAAE,CAAC,EAAE;YACbC,MAAM,EAAE;cACNC,QAAQ,EAAE,YAAY;cACtBC,QAAQ,EAAE,GAAG;cACbC,KAAK,EAAE;YACT;UACF;QACF;MACF,CAAC;MACDC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,OAAO;QACblC,IAAI,EAAE,CACJ;UAAEkC,IAAI,EAAE,MAAM;UAAEC,CAAC,EAAEC,UAAU,CAAC7C,SAAS;QAAE,CAAC,EAC1C;UAAE2C,IAAI,EAAE,QAAQ;UAAEC,CAAC,EAAEC,UAAU,CAAC3C,WAAW;QAAE,CAAC;MAElD,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACF,SAAS,EAAEE,WAAW,CAAC,CAAC;EAE5B,oBACEL,OAAA;IAAAiD,QAAA,eACEjD,OAAA;MAAKkD,EAAE,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACpD,EAAA,CA9EID,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAgFT,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}